(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{360:function(t,s,a){"use strict";a.r(s);var n=a(17),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"database-dbquery-class"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#database-dbquery-class"}},[t._v("#")]),t._v(" Database DbQuery Class")]),t._v(" "),s("p",[t._v("To create an SQL query you will need DbQuery class which is a query builder. For example,")]),t._v(" "),s("div",{staticClass:"language-php extra-class"},[s("pre",{pre:!0,attrs:{class:"language-php"}},[s("code",[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sql")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DbQuery")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sql")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("select")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'*'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sql")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'cms'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'c'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sql")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("innerJoin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'cms_lang'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'l'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'c.id_cms = l.id_cms AND l.id_lang = '")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword type-casting"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id_lang")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sql")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("where")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'c.active = 1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sql")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("orderBy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string single-quoted-string"}},[t._v("'position'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name static-context"}},[t._v("Db")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("executeS")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$sql")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Here is a list of some of the methods from this class:")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Name of the method and parameter")]),t._v(" "),s("th",[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("__toString()")]),t._v(" "),s("td",[t._v("Create and get the query.")])]),t._v(" "),s("tr",[s("td",[t._v("build()")]),t._v(" "),s("td",[t._v("Create and get the query (return a string).")])]),t._v(" "),s("tr",[s("td",[t._v("from(string $table, mixed $alias = null)")]),t._v(" "),s("td",[t._v("Set table for FROM clause.")])]),t._v(" "),s("tr",[s("td",[t._v("groupBy(string $fields)")]),t._v(" "),s("td",[t._v("Add a GROUP BY restriction.")])]),t._v(" "),s("tr",[s("td",[t._v("having(string $restriction)")]),t._v(" "),s("td",[t._v("Add a restriction in the HAVING clause (each restriction will be separated by an AND statement).")])]),t._v(" "),s("tr",[s("td",[t._v("innerJoin(string $table, string $alias = null, string $on = null)")]),t._v(" "),s("td",[t._v("Add a INNER JOIN clause, E.g. $this->innerJoin('product p ON ...').")])]),t._v(" "),s("tr",[s("td",[t._v("join(string $join)")]),t._v(" "),s("td",[t._v("Add a JOIN clause, E.g. $this->join('RIGHT JOIN'."),s("em",[t._v("DB_PREFIX")]),t._v(".'product p ON ...');.")])]),t._v(" "),s("tr",[s("td",[t._v("leftJoin(string $table, string $alias = null, string $on = null)")]),t._v(" "),s("td",[t._v("Add a LEFT JOIN clause.")])]),t._v(" "),s("tr",[s("td",[t._v("leftOuterJoin(string $table, string $alias = null, string $on = null)")]),t._v(" "),s("td",[t._v("Add a LEFT OUTER JOIN clause.")])]),t._v(" "),s("tr",[s("td",[t._v("limit(string $limit, mixed $offset = 0)")]),t._v(" "),s("td",[t._v("Limit results in query.")])]),t._v(" "),s("tr",[s("td",[t._v("naturalJoin(string $table, string $alias = null)")]),t._v(" "),s("td",[t._v("Add a NATURAL JOIN clause.")])]),t._v(" "),s("tr",[s("td",[t._v("orderBy(string $fields)")]),t._v(" "),s("td",[t._v("Add an ORDER B restriction.")])]),t._v(" "),s("tr",[s("td",[t._v("select(string $fields)")]),t._v(" "),s("td",[t._v("Add fields in query selection.")])]),t._v(" "),s("tr",[s("td",[t._v("where(string $restriction)")]),t._v(" "),s("td",[t._v("Add a restriction in WHERE clause (each restriction will be separated by an AND statement).")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);